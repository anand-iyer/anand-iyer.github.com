<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tips | Anand Iyer]]></title>
  <link href="http://anand-iyer.com/blog/categories/tips/atom.xml" rel="self"/>
  <link href="http://anand-iyer.com/"/>
  <updated>2013-02-03T04:51:29-08:00</updated>
  <id>http://anand-iyer.com/</id>
  <author>
    <name><![CDATA[Anand]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Latex Tips Collection]]></title>
    <link href="http://anand-iyer.com/blog/2013/latex-tips-collection/"/>
    <updated>2013-01-13T07:56:30-08:00</updated>
    <id>http://anand-iyer.com/blog/2013/latex-tips-collection</id>
    <content type="html"><![CDATA[<p>Over time, I've come across many useful Latex tips and tricks scattered across the internet. Here's an attempt to collect some of those:</p>

<ul>
<li><p><strong><a href="http://gurmeet.net/computer-science/latex-tips-n-tricks-for-conference-papers/">Tips for Conference Papers</a> by Gurmeet Singh
</strong>A nice set of tricks that saves your life at the last minute during deadlines.</p></li>
<li><p><strong><a href="http://www.read.seas.harvard.edu/~kohler/latex.html">Latex Usage Notes</a> by Eddie Kohler
</strong>Solutions for common Latex problems, tips on proper formatting, etc.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Syncing folders outside Dropbox folder]]></title>
    <link href="http://anand-iyer.com/blog/2012/syncing-folders-outside-dropbox-folder/"/>
    <updated>2012-10-15T23:25:03-07:00</updated>
    <id>http://anand-iyer.com/blog/2012/syncing-folders-outside-dropbox-folder</id>
    <content type="html"><![CDATA[<p>A big complaint I have about <a href="http://db.tt/VZd1Zsgp">Dropbox</a> is that unlike <a href="https://www.sugarsync.com/referral?rf=fevam6f0oyxab&amp;utm_source=website&amp;utm_medium=web&amp;utm_campaign=referral&amp;shareEvent=2630716">SugarSync</a>, it does allow me to sync any folder in my computer (essentially, I need to place the folders I want to be synced inside the "Dropbox" folder).</p>

<p>Recently, I found a workaround for this problem. Here's the trick to syncing any folder in your computer: softlink the folder to your Dropbox folder!</p>

<p>If you're using a Mac (or Linux), just use the following command:</p>

<pre><code>ln -s /full-path-to-folder/file-to-sync ~/Dropbox/desired-folder-name
</code></pre>

<p>That's it, from now on, all file(s) in the actual path would now sync with Dropbox.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Doxygen and OSX: Graphviz and other errors]]></title>
    <link href="http://anand-iyer.com/blog/2011/doxygen-and-osx/"/>
    <updated>2011-10-09T16:16:05-07:00</updated>
    <id>http://anand-iyer.com/blog/2011/doxygen-and-osx</id>
    <content type="html"><![CDATA[<p>I'm a big fan of <a href="http://www.doxygen.org/">Doxygen</a>. I use it all the time to generate and analyze call trees. Recently, I wanted to use it in my MacbookPro for analyzing an open source project. There is a binary for SnowLeopard <a href="http://www.stack.nl/~dimitri/doxygen/download.html">here</a> that works in Lion too, but it was throwing lots of errors regarding Graphviz. Here are two things that I had to do to make it finally work:</p>

<ul>
<li><p>For some reason, long file names do not work in OSX. By default, Doxygen uses long names. So you need to set the <code>SHORT_NAMES</code> to <code>YES</code> in your doxygen file. If you are using the Wizard (GUI), then save your settings file (<code>File-&gt;Save</code>), and then manually edit the file in a text editor. </p></li>
<li><p>GraphViz is included in the dmg file. You need to set appropriate path to the dot file for graphviz to work. Try setting it to <code>/Applications/Doxygen.app/Contents/Resources</code>. If that fails, then use macports to install graphviz, and use that path.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Making QXDM COM object work with Python]]></title>
    <link href="http://anand-iyer.com/blog/2011/making-qxdm-com-object-work-with-python/"/>
    <updated>2011-02-19T08:21:17-08:00</updated>
    <id>http://anand-iyer.com/blog/2011/making-qxdm-com-object-work-with-python</id>
    <content type="html"><![CDATA[<p>Qualcomm's <a href="http://www.qualcomm.com/products_services/testing_diagnostics/qxdm_pro.html">QXDM</a> is an amazing tool for getting diagnostic information from mobile phones. It supports automation where you can write scripts to interface with the COM object exposed by QXDM.</p>

<p>The default installation of QXDM comes with a number of examples on how to use this object. Unfortunately, all the examples are in Perl. Although I like Perl, recently I have been using Python for all my scripting needs. It's actually very easy to convert all these scripts to Python. Here's how:</p>

<ul>
<li><p>First, you need Python to be able to access COM objects. For this purpose, I used the Python comtypes package. Download and install it from <a href="http://sourceforge.net/projects/comtypes/files/">SourceForge</a>.</p></li>
<li><p>Now, you can do the following in your script:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">comtypes.client</span> <span class="kn">import</span> <span class="n">CreateObject</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">For</span> <span class="n">ISF</span> <span class="nb">file</span> <span class="n">post</span><span class="o">-</span><span class="n">processing</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">IISF</span> <span class="o">=</span> <span class="n">CreateObject</span><span class="p">(</span><span class="s">&quot;DMCoreAutomation.ItemStoreFiles&quot;</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">For</span> <span class="n">accessing</span> <span class="n">data</span> <span class="n">directly</span> <span class="kn">from</span> <span class="nn">QXDM.</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Note</span> <span class="n">that</span> <span class="n">the</span> <span class="n">script</span> <span class="n">needs</span> <span class="n">to</span> <span class="n">be</span> <span class="n">run</span> <span class="k">as</span> <span class="n">admin</span><span class="o">.&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">QXDM</span> <span class="o">=</span> <span class="n">CreateObject</span><span class="p">(</span><span class="s">&quot;QXDM.Application&quot;</span><span class="p">)</span><span class="err"> </span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Qualnet 4.0.1 woes!]]></title>
    <link href="http://anand-iyer.com/blog/2010/qualnet-4-0-1-woes/"/>
    <updated>2010-12-23T01:06:15-08:00</updated>
    <id>http://anand-iyer.com/blog/2010/qualnet-4-0-1-woes</id>
    <content type="html"><![CDATA[<p>For my latest work, I am using the Qualnet simulator tool. Unfortunately, the version that I have access to is pretty old (version 4.0.1). Consequently, I had a lot of trouble getting it to compile in Windows 7. For those who are having the same trouble, see if what I did works for you:</p>

<ul>
<li><p>This version of Qualnet is only compatible with Visual Studio 2005 (I have tried VS 2008 and VS 2010 - although I succeeded in compiling, the executable crashes all the time). Install VS 2005 if you can get hold of it, or install Visual C++ 2005 Express edition which is available for free.</p></li>
<li><p>The second thing that is essential for building Qualnet is Windows 7 SDK. Download and install this from Microsoft.</p></li>
<li><p>Once you have both these installed, run the <code>vsvars32.bat</code> file to set the right environment variables. <code>vsvars32.bat</code> is available in the following folder: <code>C:\Program Files\Microsoft Visual Studio 8\Common7\Tools\</code></p></li>
<li><p>Now try compiling qualnet. I used the following command inside <code>c:\qualnet\4.0\main folder</code>:</p>

<pre><code>nmake /f Makefile-windows-vc8
</code></pre></li>
<li><p>For most, the compilation will fail giving errors in <code>oslrv2_nigata.cpp</code>. So go ahead and comment out this file in the makefile present in <code>qualnet\libraries\wireless\src</code></p></li>
<li><p>Try compiling again. Now the compiler would throw errors wherever routines from the file that we commented out. I had to comment out its usage wherever compilation broke.</p></li>
<li><p>Once I did that, compilation went smooth, and I was able to get qualnet working.</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
