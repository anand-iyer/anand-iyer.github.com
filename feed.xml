<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:wfw="http://wellformedweb.org/CommentAPI/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
  xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
  >
  <channel>
    <title xml:lang="en">Anand Iyer • CS PhD Student @ UC Berkeley</title>
    <atom:link type="application/atom+xml" href="http://anand-iyer.com/feed.xml" rel="self"/>
    <link>http://anand-iyer.com</link>
    <pubDate>Mon, 10 Nov 2014 23:19:57 -0800</pubDate>
    <lastBuildDate>Mon, 10 Nov 2014 23:19:57 -0800</lastBuildDate>
    <language>en-US</language>
    <generator>Jekyll v2.5.1</generator>
    <description>Anand's personal website</description>
    <image>
      <description>Anand's personal website</description>
      <url>http://anand-iyer.com/img/logo-rss.png</url>
      <title>Anand Iyer • CS PhD Student @ UC Berkeley</title>
      <link>http://anand-iyer.com</link>
      <width>144</width>
      <height>73</height>
    </image>
    
    <item>
      <title>Fixing missing bootcamp partition in OSX</title>
      <link>http://anand-iyer.com/blog/2014/fixing-missing-bootcamp-partition-in-osx.html</link>
      <pubDate>Wed, 28 May 2014 01:25:00 -0700</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      
      <category>tips</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2014/fixing-missing-bootcamp-partition-in-osx.html</guid>
      <description>&lt;p&gt;&lt;strong&gt;Symptom:&lt;/strong&gt; You use Bootcamp to dual-boot OSX and Windows. After installing Windows, you are not able to see the BOOTCAMP partition in OSX. If you try viewing the disk using disk utility, the BOOTCAMP partition is greyed out, and shows up as FAT formatted although it is NTFS formatted.&lt;/p&gt;

&lt;p&gt;Turns out the issue occurs because of a modification during Windows installation. Once Bootcamp Assistant (BCA) created the BOOTCAMP partition and restarted the system, I noticed that there was an additional small-sized partition created (~600MB) just before the BOOTCAMP partition. Instead of ignoring it, I deleted and recreated the bootcamp partition from Windows setup hoping the wasted space would be reclaimed. That was a bad idea.&lt;/p&gt;

&lt;p&gt;When you do this, it confuses the hybrid GPT/MBR partitioning scheme used by BCA. Essentially, when you remove/resize/add partitions via Windows setup, that information gets updated in the MBR record, but is not synced to the GPT record. Thus, Windows will see the OSX partition, but not vice-versa.&lt;/p&gt;

&lt;p&gt;The easy way to fix this without going through the pain of removing and reinstalling Windows from scratch is to sync the MBR info back to the GPT record. Here’s how to do it:&lt;/p&gt;

&lt;p&gt;First, we need detailed information on the MBR record—where the partition starts, where it ends etc. For this purpose, use the &lt;code&gt;gptsync&lt;/code&gt; tool. Homebrew has the gptsync package, but if you try to use it, you’ll end up with the following error:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Warning: Unknown GPT spec revision 0x00010000&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is because of 64-bit incompatability. A fixed version of gptsync aimed at OSX, extracted from rEFIt is available &lt;a href=&quot;https://github.com/JrCs/gptsync&quot;&gt;here&lt;/a&gt;. Just compile it using Xcode, and you’re good to go.&lt;/p&gt;

&lt;p&gt;Running &lt;code&gt;gptsync&lt;/code&gt; on my machine resulted in the following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; ./gptsync /dev/disk0
    
    Current GPT partition table:
     &lt;span class=&quot;c&quot;&gt;#      Start LBA      End LBA  Type&lt;/span&gt;
     &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;m&quot;&gt;40&lt;/span&gt;       &lt;span class=&quot;m&quot;&gt;409639&lt;/span&gt;  EFI System &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FAT&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;         &lt;span class=&quot;m&quot;&gt;409640&lt;/span&gt;    &lt;span class=&quot;m&quot;&gt;250801735&lt;/span&gt;  Mac OS X HFS+
     &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;      &lt;span class=&quot;m&quot;&gt;250801736&lt;/span&gt;    &lt;span class=&quot;m&quot;&gt;252071271&lt;/span&gt;  Mac OS X Boot
     &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;      &lt;span class=&quot;m&quot;&gt;252071936&lt;/span&gt;    &lt;span class=&quot;m&quot;&gt;500117503&lt;/span&gt;  Basic Data

    Current MBR partition table:
     &lt;span class=&quot;c&quot;&gt;# A    Start LBA      End LBA  Type&lt;/span&gt;
     &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;              &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;       &lt;span class=&quot;m&quot;&gt;409639&lt;/span&gt;  ee  EFI Protective
     &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;         &lt;span class=&quot;m&quot;&gt;409640&lt;/span&gt;    &lt;span class=&quot;m&quot;&gt;250801735&lt;/span&gt;  af  Mac OS X HFS+
     &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; *    &lt;span class=&quot;m&quot;&gt;250802176&lt;/span&gt;    &lt;span class=&quot;m&quot;&gt;251518975&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;07&lt;/span&gt;  NTFS/HPFS
     &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;      &lt;span class=&quot;m&quot;&gt;251518976&lt;/span&gt;    &lt;span class=&quot;m&quot;&gt;500115455&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;07&lt;/span&gt;  NTFS/HPFS&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the scenario above, the solution was to modify the GPT table to match the MBR table. Essentially, delete partitions 3 and 4, and then recreate it as per MBR. For this purpose, I used the gdisk tool available &lt;a href=&quot;http://www.rodsbooks.com/gdisk/&quot;&gt;here&lt;/a&gt;. Once installed, run the tool (usage instructions are similar to fdisk, tutorial is available on the tool’s website). I used &lt;code&gt;d&lt;/code&gt; command to delete partitions 3 and 4, &lt;code&gt;n&lt;/code&gt; command to recreate them with first sector and last sector noted from MBR and type 0700. Once done, check the changes using command &lt;code&gt;p&lt;/code&gt;, and verify for errors using &lt;code&gt;v&lt;/code&gt;. If there are no errors, confirm the changes by writing them with command &lt;code&gt;w&lt;/code&gt;, reboot and enjoy! &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Re-signing IPA files</title>
      <link>http://anand-iyer.com/blog/2013/re-signing-ipa-files.html</link>
      <pubDate>Thu, 28 Mar 2013 23:49:00 -0700</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      
      <category>tips</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2013/re-signing-ipa-files.html</guid>
      <description>&lt;p&gt;Scenario: You have an IPA that you want to test on a device, but the IPA was generated using a provisioning profile that does not include the device, and was signed with a certificate that is not yours. You drag this IPA to XCode’s organizer window hoping it would be installed on the connected device, but this results in an &lt;code&gt;Unknown error&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Turns out that this is easy to fix. Here’s how to make it work. &lt;/p&gt;

&lt;p&gt;First, unpack the IPA (&lt;code&gt;unzip -q &amp;lt;IPA&amp;gt;&lt;/code&gt;). This would create a directory named &lt;code&gt;Payload&lt;/code&gt; and a few other files. Delete the existing signature in the extracted package:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;rm -rf &lt;span class=&quot;s2&quot;&gt;&amp;quot;Payload/*.app/_CodeSignature&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Payload/*.app/CodeResources&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For the next step, you need two things: a valid provisioning profile and a valid certificate. Both can be obtained via the iOS developer portal. &lt;/p&gt;

&lt;p&gt;Replace the provisioning profile first&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cp &amp;lt;PROVISIONING_PROFILE&amp;gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Payload/*.app/embedded.mobileprovision&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then resign using your certificate (the certificate must be present in your keychain)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/usr/bin/codesign -f -s &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;CERTIFICATE&amp;gt;&amp;quot;&lt;/span&gt; --resource-rules &lt;span class=&quot;s2&quot;&gt;&amp;quot;Payload/*.app/ResourceRules.plist&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Payload/*.app&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you can recreate the IPA and then drag &amp;amp; drop it in the XCode organizer to install it on the device!&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;zip -qr &amp;lt;IPA_resigned&amp;gt; Payload&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt; If you are looking for user friendly options, check out the &lt;a href=&quot;http://floatlearning.com/2011/11/re-signing-an-ios-app-without-xcode/&quot; target=&quot;_blank&quot;&gt;script by Daniel&lt;/a&gt; or the &lt;a href=&quot;http://www.gorbster.net/blog/archives/273&quot; target=&quot;_blank&quot;&gt;app by Brian&lt;/a&gt;. &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gnuplot cairo terminal errors in Mountain Lion</title>
      <link>http://anand-iyer.com/blog/2013/gnuplot-cairo-terminal-errors-in-mountain-lion.html</link>
      <pubDate>Sun, 17 Mar 2013 20:31:00 -0700</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      
      <category>tips</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2013/gnuplot-cairo-terminal-errors-in-mountain-lion.html</guid>
      <description>&lt;p&gt;I love the cairo terminal in gnuplot, it creates amazing plots. My recent upgrade to Mountain Lion broke my homebrew based gnuplot installation, throwing a bunch of glib errors when I set the terminal to pdfcairo or pngcairo (normal terminals work fine): &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Error: GLib-GObject-CRITICAL **: gtype.c:2720: You forgot to call g_type_init&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is essentially an issue with the latest version of Pango package. There are two ways to fix this: &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Force homebrew to go back to a lower version of Pango; this error seems to appear in versions 1.32.6 or later.&lt;/li&gt;
  &lt;li&gt;Patch the gnuplot installation’s Cairo terminal as suggested &lt;a href=&quot;https://github.com/mxcl/homebrew/pull/18528&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you are not getting cairo terminals in your gnuplot installation, reinstall it with cairo option enabled: &lt;code&gt;brew install gnuplot --cairo&lt;/code&gt;&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>Latex Tips Collection</title>
      <link>http://anand-iyer.com/blog/2013/latex-tips-collection.html</link>
      <pubDate>Sun, 13 Jan 2013 07:56:30 -0800</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      <category>latex</category>
      
      
      <category>tips</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2013/latex-tips-collection.html</guid>
      <description>&lt;p&gt;Over time, I’ve come across many useful Latex tips and tricks scattered across the internet. Here’s an attempt to collect some of those:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://gurmeet.net/computer-science/latex-tips-n-tricks-for-conference-papers/&quot;&gt;Tips for Conference Papers&lt;/a&gt; by Gurmeet Singh&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;A nice set of tricks that saves your life at the last minute during deadlines.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.read.seas.harvard.edu/~kohler/latex.html&quot;&gt;Latex Usage Notes&lt;/a&gt; by Eddie Kohler&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Solutions for common Latex problems, tips on proper formatting, etc.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    
    <item>
      <title>Syncing folders outside Dropbox folder</title>
      <link>http://anand-iyer.com/blog/2012/syncing-folders-outside-dropbox-folder.html</link>
      <pubDate>Mon, 15 Oct 2012 23:25:03 -0700</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      <category>any folder</category>
      
      <category>dropbox</category>
      
      <category>sugarsync</category>
      
      
      <category>tips</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2012/syncing-folders-outside-dropbox-folder.html</guid>
      <description>&lt;p&gt;A big complaint I have about &lt;a href=&quot;http://db.tt/VZd1Zsgp&quot;&gt;Dropbox&lt;/a&gt; is that unlike &lt;a href=&quot;https://www.sugarsync.com/referral?rf=fevam6f0oyxab&amp;amp;utm_source=website&amp;amp;utm_medium=web&amp;amp;utm_campaign=referral&amp;amp;shareEvent=2630716&quot;&gt;SugarSync&lt;/a&gt;, it does allow me to sync any folder in my computer (essentially, I need to place the folders I want to be synced inside the “Dropbox” folder).&lt;/p&gt;

&lt;p&gt;Recently, I found a workaround for this problem. Here’s the trick to syncing any folder in your computer: softlink the folder to your Dropbox folder!&lt;/p&gt;

&lt;p&gt;If you’re using a Mac (or Linux), just use the following command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ln -s /full-path-to-folder/file-to-sync ~/Dropbox/desired-folder-name&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That’s it, from now on, all file(s) in the actual path would now sync with Dropbox.&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>Doxygen and OSX: Graphviz and other errors</title>
      <link>http://anand-iyer.com/blog/2011/doxygen-and-osx.html</link>
      <pubDate>Sun, 09 Oct 2011 16:16:05 -0700</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      <category>doxygen</category>
      
      <category>graphviz</category>
      
      <category>lion</category>
      
      <category>osx</category>
      
      
      <category>tips</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2011/doxygen-and-osx.html</guid>
      <description>&lt;p&gt;I’m a big fan of &lt;a href=&quot;http://www.doxygen.org/&quot;&gt;Doxygen&lt;/a&gt;. I use it all the time to generate and analyze call trees. Recently, I wanted to use it in my MacbookPro for analyzing an open source project. There is a binary for SnowLeopard &lt;a href=&quot;http://www.stack.nl/~dimitri/doxygen/download.html&quot;&gt;here&lt;/a&gt; that works in Lion too, but it was throwing lots of errors regarding Graphviz. Here are two things that I had to do to make it finally work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;For some reason, long file names do not work in OSX. By default, Doxygen uses long names. So you need to set the &lt;code&gt;SHORT_NAMES&lt;/code&gt; to &lt;code&gt;YES&lt;/code&gt; in your doxygen file. If you are using the Wizard (GUI), then save your settings file (&lt;code&gt;File-&amp;gt;Save&lt;/code&gt;), and then manually edit the file in a text editor. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GraphViz is included in the dmg file. You need to set appropriate path to the dot file for graphviz to work. Try setting it to &lt;code&gt;/Applications/Doxygen.app/Contents/Resources&lt;/code&gt;. If that fails, then use macports to install graphviz, and use that path.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    
    <item>
      <title>Making QXDM COM object work with Python</title>
      <link>http://anand-iyer.com/blog/2011/making-qxdm-com-object-work-with-python.html</link>
      <pubDate>Sat, 19 Feb 2011 08:21:17 -0800</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      <category>COM</category>
      
      <category>python</category>
      
      <category>qxdm</category>
      
      
      <category>tips</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2011/making-qxdm-com-object-work-with-python.html</guid>
      <description>&lt;p&gt;Qualcomm’s &lt;a href=&quot;http://www.qualcomm.com/products_services/testing_diagnostics/qxdm_pro.html&quot;&gt;QXDM&lt;/a&gt; is an amazing tool for getting diagnostic information from mobile phones. It supports automation where you can write scripts to interface with the COM object exposed by QXDM.&lt;/p&gt;

&lt;p&gt;The default installation of QXDM comes with a number of examples on how to use this object. Unfortunately, all the examples are in Perl. Although I like Perl, recently I have been using Python for all my scripting needs. It’s actually very easy to convert all these scripts to Python. Here’s how:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;First, you need Python to be able to access COM objects. For this purpose, I used the Python comtypes package. Download and install it from &lt;a href=&quot;http://sourceforge.net/projects/comtypes/files/&quot;&gt;SourceForge&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now, you can do the following in your script:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;comtypes.client&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CreateObject&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# For ISF file post-processing&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;IISF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CreateObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;DMCoreAutomation.ItemStoreFiles&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 

&lt;span class=&quot;c&quot;&gt;# For accessing data directly from QXDM. &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Note that the script needs to be run as admin.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;QXDM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CreateObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;QXDM.Application&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>It&#39;s raining job offers at CET!</title>
      <link>http://anand-iyer.com/blog/2010/its-raining-job-offers-at-cet.html</link>
      <pubDate>Fri, 24 Dec 2010 03:38:31 -0800</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      <category>cet</category>
      
      <category>job offers</category>
      
      <category>placements</category>
      
      
      <category>miscellaneous</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2010/its-raining-job-offers-at-cet.html</guid>
      <description>&lt;p&gt;Seems like it has been a fantastic placement season for the 2011 batch at my alma mater, &lt;a href=&quot;http://en.wikipedia.org/wiki/College_of_Engineering,_Trivandrum&quot;&gt;College of Engineering, Trivandrum&lt;/a&gt; (CET). According to &lt;a href=&quot;http://www.hinduonnet.com/2010/12/21/stories/2010122165900300.htm&quot;&gt;this&lt;/a&gt; article from &lt;strong&gt;The Hindu&lt;/strong&gt;, 1019 job offers were made to a total of 540 students. Here’s the breakdown (courtesy: The Hindu):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.anand-iyer.com/blog/wp-content/uploads/2010/12/2010122165900301.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Way to go CETians!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Qualnet 4.0.1 woes!</title>
      <link>http://anand-iyer.com/blog/2010/qualnet-4-0-1-woes.html</link>
      <pubDate>Thu, 23 Dec 2010 01:06:15 -0800</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      <category>qualnet 4.0</category>
      
      <category>vc++</category>
      
      <category>visual studio 2005</category>
      
      <category>windows 7</category>
      
      
      <category>tips</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2010/qualnet-4-0-1-woes.html</guid>
      <description>&lt;p&gt;For my latest work, I am using the Qualnet simulator tool. Unfortunately, the version that I have access to is pretty old (version 4.0.1). Consequently, I had a lot of trouble getting it to compile in Windows 7. For those who are having the same trouble, see if what I did works for you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;This version of Qualnet is only compatible with Visual Studio 2005 (I have tried VS 2008 and VS 2010 - although I succeeded in compiling, the executable crashes all the time). Install VS 2005 if you can get hold of it, or install Visual C++ 2005 Express edition which is available for free.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The second thing that is essential for building Qualnet is Windows 7 SDK. Download and install this from Microsoft.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Once you have both these installed, run the &lt;code&gt;vsvars32.bat&lt;/code&gt; file to set the right environment variables. &lt;code&gt;vsvars32.bat&lt;/code&gt; is available in the following folder: &lt;code&gt;C:\Program Files\Microsoft Visual Studio 8\Common7\Tools\&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now try compiling qualnet. I used the following command inside &lt;code&gt;c:\qualnet\4.0\main&lt;/code&gt; folder:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;nmake /f Makefile-windows-vc8&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;For most, the compilation will fail giving errors in &lt;code&gt;oslrv2_nigata.cpp&lt;/code&gt;. So go ahead and comment out this file in the makefile present in &lt;code&gt;qualnet\libraries\wireless\src&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Try compiling again. Now the compiler would throw errors wherever routines from the file that we commented out. I had to comment out its usage wherever compilation broke.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Once I did that, compilation went smooth, and I was able to get qualnet working.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    
    <item>
      <title>ImportError with IronPython in C#</title>
      <link>http://anand-iyer.com/blog/2010/importerror-with-ironpython-in-c.html</link>
      <pubDate>Thu, 30 Sep 2010 15:48:44 -0700</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      <category>C#</category>
      
      <category>IronPython</category>
      
      <category>searchpaths</category>
      
      <category>xmlrpclib</category>
      
      
      <category>tips</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2010/importerror-with-ironpython-in-c.html</guid>
      <description>&lt;p&gt;I was using IronPython to execute python code inside my C# implementation lately, and I encountered this error when trying to use xmlrpclib:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ImportError: No module named xmlrpclib.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It was really frustrating because if I try the same in IronPython console, it works fine. It turned out that this was a problem with search paths. When called via C# code, IronPython does not search for missing libraries unless you provide it a path to search for. Here’s how I solved this issue:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;First, find out the search paths that IronPython is using in console mode:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will print all the search paths. Save these paths somewhere.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Now include all these search paths inside your C# code:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;n&quot;&gt;ScriptEngine&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Engine&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Python&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateEngine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ICollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Paths&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetSearchPaths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;Path&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetSearchPaths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Replace &lt;code&gt;&amp;lt;Path&amp;gt;&lt;/code&gt; with the path you saved earlier. Now IronPython will search all these pathsbefore failing with an ImportError.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Conky like system monitor for Windows</title>
      <link>http://anand-iyer.com/blog/2010/conky-like-system-monitor-for-windows.html</link>
      <pubDate>Wed, 23 Jun 2010 06:15:57 -0700</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      <category>conky</category>
      
      <category>rainmeter</category>
      
      <category>system monitor</category>
      
      <category>windows</category>
      
      
      <category>miscellaneous</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2010/conky-like-system-monitor-for-windows.html</guid>
      <description>&lt;p&gt;Ever since I came across &lt;a href=&quot;http://conky.sourceforge.net/&quot;&gt;Conky&lt;/a&gt;, I have been using it on all my machines running Ubuntu (for those who are interested, I use &lt;a href=&quot;http://gnome-look.org/content/show.php/CONKY-colors?content=92328&quot;&gt;Conky-Colors&lt;/a&gt; for easy configuration). I also use Windows extensively and had always wanted to have something similar to Conky. It seems like my quest has finally ended. My good friend suggested that I try &lt;a href=&quot;http://rainmeter.net/&quot;&gt;RainMeter&lt;/a&gt;, and I was impressed with the results! It’s extremely customizable, has tons of skins to choose from, and is not heavy on the system.&lt;/p&gt;

&lt;p&gt;Here’s a screenshot (the theme I’m using is &lt;a href=&quot;http://jsmorley.deviantart.com/art/JSMeterII-161282085&quot;&gt;JSMeterII&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/Desktop-300x187.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NS3 in Eclipse</title>
      <link>http://anand-iyer.com/blog/2010/ns3-in-eclipse.html</link>
      <pubDate>Sun, 30 May 2010 11:58:55 -0700</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      <category>10.04</category>
      
      <category>eclipse</category>
      
      <category>galileo</category>
      
      <category>lucid lynx</category>
      
      <category>ns3</category>
      
      <category>ubuntu</category>
      
      
      <category>tips</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2010/ns3-in-eclipse.html</guid>
      <description>&lt;p&gt;I found &lt;a href=&quot;http://www.nsnam.org/wiki/index.php/HOWTO_configure_eclipse_with_ns-3&quot;&gt;this&lt;/a&gt; wiki page on configuring NS3 with Eclipse and decided to give it a try. I had trouble compiling, and Eclipse kept giving the following error:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Cannot run program &lt;span class=&quot;s2&quot;&gt;&amp;quot;waf&amp;quot;&lt;/span&gt;: Unknown reason&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After spending a little time with the configuration, the following additional tweaking seems to be working (in Ubuntu 10.04, Eclipse version 3.5.2 Galileo with ns-allinone-3.8):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Create a new External tool configuration. The location should be the location to waf (&lt;code&gt;${workspace_loc:/ns3/waf}&lt;/code&gt; in my case) and working directory should be the directory where waf is present (&lt;code&gt;${workspace_loc:/ns3/}&lt;/code&gt; in my case). In arguments textbox, provide the following: &lt;code&gt;--run &quot;${string_prompt}&quot;&lt;/code&gt;. Now when you try to build the project (right click on the &lt;code&gt;project -&amp;gt; Build Project&lt;/code&gt;), it should work.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To run NS3 programs using waf, you need to create a new Run configuration. Make the new configuration to be a C/C++ application. Select the project you want this run configuration to be associated with, and give the complete path to waf as the C/C++ program. Click on the arguments tab, and provide the same argument as above. Now when you try to run a program, a dialog box should pop-up asking for the input arguments to waf and your program should run.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>NS2 in Ubuntu 10.04</title>
      <link>http://anand-iyer.com/blog/2010/ns2-in-ubuntu-10-04.html</link>
      <pubDate>Wed, 19 May 2010 04:13:49 -0700</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      <category>10.04</category>
      
      <category>lucid lynx</category>
      
      <category>ns2</category>
      
      <category>ubuntu</category>
      
      
      <category>tips</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2010/ns2-in-ubuntu-10-04.html</guid>
      <description>&lt;p&gt;I spent a reasonably long time getting NS-2 (ns-allinone-2.34) to work in Ubuntu 10.04. Here’s how I finally did it:&lt;/p&gt;

&lt;p&gt;Install necessary tools for building:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install build-essential autoconf automake libxmu-dev gcc-4.3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It turns out that otcl does not like the version of gcc installed by default in Lucid. So go ahead and change &lt;code&gt;ns-allinone-2.34/otcl-1.13/Makefile.in&lt;/code&gt;. Find the line that says:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;CC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;    @CC@&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and change it to:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;CC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;    gcc-4.3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now try doing &lt;code&gt;./install&lt;/code&gt; from the ns-allinone-2.34 directory. It should work.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ath5k “Master” mode</title>
      <link>http://anand-iyer.com/blog/2010/ath5k-master-mode.html</link>
      <pubDate>Thu, 06 May 2010 09:11:34 -0700</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      <category>10.04</category>
      
      <category>ath5k</category>
      
      <category>hostapd</category>
      
      <category>lucid lynx</category>
      
      <category>ubuntu</category>
      
      
      <category>tips</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2010/ath5k-master-mode.html</guid>
      <description>&lt;p&gt;To enable Master mode in ath5k, do the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Make sure you are running kernel 2.6.29 or higher. If not, you need to get the latest patches for ath5k.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install hostapd. It is available in Ubuntu repositories.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create a config file for hostapd. A simple one is:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wlan0
&lt;span class=&quot;nv&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nl80211
&lt;span class=&quot;nv&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Now you can start hostapd to put the card in master mode:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo hostapd &amp;lt;config_file&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Royaltek RBT-2300 and Karmic Koala</title>
      <link>http://anand-iyer.com/blog/2010/royaltek-rbt-2300-and-karmic-koala.html</link>
      <pubDate>Wed, 31 Mar 2010 15:48:46 -0700</pubDate>
      <dc:creator>anand-iyer</dc:creator>
      
      <category>9.10</category>
      
      <category>GPS</category>
      
      <category>royaltek</category>
      
      <category>ubuntu</category>
      
      
      <category>tips</category>
      
      <guid isPermaLink="true">http://anand-iyer.com/blog/2010/royaltek-rbt-2300-and-karmic-koala.html</guid>
      <description>&lt;p&gt;I recently had to make use of a GPS logger in Linux. Here’s how I made it work in Karmic, incase any one is interested:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;First, make sure you have necessary bluetooth packages. If not, install it using:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install bluetooth
        sudo apt-get install libbluetooth-dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Switch on the GPS, scan and check if you can find the device:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo hcitool scan&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The output would be something like the following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Scanning ...
     00:aa:bb:cc:dd:ee    BlueGPS CCDDEE&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We are interested in the channel in which the device operates. Let’s find that out:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo sdptool records 00:aa:bb:cc:dd:ee&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will give you lots of information about the device. Pay attention to the channel. For instance, my device says:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Service Name: Dev B
    Service RecHandle: 0x10000
    Service Class ID List:
     &lt;span class=&quot;s2&quot;&gt;&amp;quot;Serial Port&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0x1101&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    Protocol Descriptor List:
     &lt;span class=&quot;s2&quot;&gt;&amp;quot;L2CAP&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0x0100&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;s2&quot;&gt;&amp;quot;RFCOMM&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0x0003&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
     &amp;lt;strong&amp;gt;Channel: 1&amp;lt;/strong&amp;gt;
    Language Base Attr List:
     code_ISO639: 0x656e
     encoding:    0x6a
     base_offset: 0x100&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Use this channel to create an entry in the &lt;code&gt;rfcomm.conf&lt;/code&gt; file:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo gedit /etc/bluetooth/rfcomm.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;enter the following at the end of the file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Bluetooth GPS&lt;/span&gt;
    rfcomm2 &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;bind &lt;/span&gt;yes,
        device 00:aa:bb:cc:dd:ee,
        channel 1,
        comment &lt;span class=&quot;s2&quot;&gt;&amp;quot;Serial Port&amp;quot;&lt;/span&gt;,
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once you have done this, you can connect to the device:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo rfcomm connect 2
    Connected /dev/rfcomm2 to 00:aa:bb:cc:dd:ee on channel 1
    Press CTRL-C &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; hangup&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;I found rtkgps (&lt;a href=&quot;http://wohlberg.net/public/software/misc/rtkgps/&quot;&gt;http://wohlberg.net/public/software/misc/rtkgps/&lt;/a&gt;) to be a good utility to access GPS logs.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;rtkgps -d /dev/rfcomm2 &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
